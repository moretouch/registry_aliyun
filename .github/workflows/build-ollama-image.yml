name: Build and Push Ollama Model Image

on:
  workflow_dispatch:
    inputs:
      model_name:
        type: string
        description: '模型名称（例如：qwen3:1.7b）'
        required: true

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}        # registry.cn-hangzhou.aliyuncs.com/mine/ollama
  REGISTRY_USER: ${{ secrets.REGISTRY_USER }} # 阿里云账号或 AccessKey ID
  REGISTRY_PASS: ${{ secrets.REGISTRY_PASS }} # 阿里云 AccessKey Secret 或密码
  MODEL_NAME: ${{ github.event.inputs.model_name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码库（如果需要）
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 登录到阿里云容器镜像服务
      - name: Login to Aliyun Container Registry
        run: echo "${{ secrets.REGISTRY_PASS }}" | docker login registry.cn-hangzhou.aliyuncs.com -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      # 3. 下载 Ollama 容器并运行模型
      - name: Download Ollama and pull model
        run: |
          # 拉取 ollama/ollama 镜像
          docker pull ollama/ollama:latest

          # 创建一个临时容器运行模型
          docker run --rm -d --name ollama-container ollama/ollama:latest
          docker exec ollama-container ollama pull ${{ env.MODEL_NAME }}

      # 4. 将运行好的容器重新打包为新的镜像
      - name: Commit the container to a new image
        run: |
          # 提交容器为新的镜像
          docker commit ollama-container ollama-with-model:latest

      # 5. 标记新镜像并推送到阿里云镜像仓库
      - name: Tag and push the new image
        run: |
          # 标记镜像
          docker tag ollama-with-model:latest ${{ env.IMAGE_NAME }}:${{ env.MODEL_NAME }}

          # 推送镜像到阿里云
          docker push ${{ env.IMAGE_NAME }}:${{ env.MODEL_NAME }}

      # 6. 清理
      - name: Cleanup
        run: |
          docker rm -f ollama-container || true
          docker rmi ollama-with-model:latest || true
          docker rmi ${{ env.IMAGE_NAME }}:${{ env.MODEL_NAME }} || true
